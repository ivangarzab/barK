# The purpose of this GitHub Action workflow is twofold: Create a GitHub Release and trigger a JitPack build.

name: Prepare Release

on:
  push:
    tags: ["*"]
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry Run: Only log actions, do not push or create GitHub Release.'
        required: true
        type: boolean
        default: false

jobs:
  github-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      VERSION: ${{ github.ref_name }}
    steps:
      - run: echo "üé´ A new tag=${{ env.VERSION }} has been detected!"
      - run: echo "Creating new GitHub release and triggering Jitpack build"

      - name: Get the release version
        run: echo "Running prep-release for version ${{ env.VERSION }}"

      - name: Welcome message
        run: echo "Preparing a new release for version ${{ env.VERSION }}"

      - uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned"

      - run: echo "Setting up JDK"
      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code"

      - run: echo "Creating new GitHub Release for version ${{ env.VERSION }}"
        if: ${{ !inputs.dry_run }}

      - name: Create new GitHub Release
        if: ${{ !inputs.dry_run }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: v${{ env.VERSION }}
          body: |
            ## barK v${{ env.VERSION }}
            
            A simple, extensible logging library for Kotlin Multiplatform with automatic tag detection and support for test runs.
            
            ### Usage
            ```kotlin
            dependencies {
                implementation("com.ivangarzab:bark:${{ env.VERSION }}")
            }
            ```
            
            ### What's Changed
            - Release barK v${{ env.VERSION }}
            - See [README](https://github.com/ivangarzab/barK/blob/main/README.md) for full documentation
          draft: false
          prerelease: false

  jitpack:
    runs-on: ubuntu-latest
    needs: github-release
    env:
      VERSION: ${{ github.ref_name }}
    steps:
      - name: Welcome message
        run: echo "Triggering jitpack build for barK v${{ env.VERSION }}"
      - name: Request build from JitPack
        if: ${{ !inputs.dry_run }}
        run: |
          echo "Requesting JitPack to build barK v${{ env.VERSION }}"
          # timeout in 60 seconds to avoid waiting too long for KMP build
          curl -s -m 60 https://jitpack.io/com/github/ivangarzab/bark/${{ env.VERSION }}/ || true
          echo "JitPack build request sent!"